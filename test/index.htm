
<!DOCTYPE html>
<html class="ocks-org do-not-copy">
<meta charset="utf-8">
<title>test</title>
<style>

@import url(/css/fbo.css?aea6f0a);

#chart {
  height: 500px;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

</style>
<body>

<header>
  <aside>May 22, 2012</aside>
  <a href="../" rel="author">Mike Bostock</a>
</header>

<h1>test Graph D3</h1>

<p id="chart">



<script src="http://d3js.org/d3.v2.min.js?2.9.1"></script>
<script src="/js/fbo.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 20, left: 30},
    width = 960 - margin.left - margin.right,
    height = 800 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var fbo = d3.fbo()
    .nodeWidth(20)
    .nodePadding(20)
    .size([width-120, height-100]);

var path = fbo.link();

var diagonal = d3.svg.diagonal();

d3.json("/data/energy2.json", function(energy) {

  fbo
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(32);

   var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", diagonal);

  link.append("title")
      .text(function(d) { return d.source.name + " ? " + d.target.name + "\n" + format(d.value); });

 var node = svg.append("g").selectAll(".node")
      .data(energy.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
	  .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

 node.append("circle")
      .attr("r", function(d) { return Math.max(2, d.dy/10); });

  node.append("text")
      .attr("dx", function(d) { return d.children ? -8 : 8; })
      .attr("dy", 3)
      .style("text-anchor", function(d) { return d.children ? "end" : "start"; })
      .text(function(d) { return d.name; });
	  

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    fbo.relayout();
    link.attr("d", diagonal);
  }
	  
});

</script>